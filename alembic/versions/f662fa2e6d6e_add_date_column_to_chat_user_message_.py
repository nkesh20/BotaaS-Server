"""add_date_column_to_chat_user_message_counts

Revision ID: f662fa2e6d6e
Revises: 4ad8cf29dc86
Create Date: 2025-07-27 20:58:43.552242

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f662fa2e6d6e'
down_revision: Union[str, None] = '4ad8cf29dc86'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_analytics_snapshots_bot_id'), table_name='analytics_snapshots')
    op.drop_index(op.f('ix_analytics_snapshots_id'), table_name='analytics_snapshots')
    op.drop_index(op.f('ix_analytics_snapshots_period_type'), table_name='analytics_snapshots')
    op.drop_index(op.f('ix_analytics_snapshots_snapshot_date'), table_name='analytics_snapshots')
    op.drop_table('analytics_snapshots')
    op.drop_index(op.f('ix_bot_user_message_counts_bot_id'), table_name='bot_user_message_counts')
    op.drop_index(op.f('ix_bot_user_message_counts_id'), table_name='bot_user_message_counts')
    op.drop_index(op.f('ix_bot_user_message_counts_user_id'), table_name='bot_user_message_counts')
    op.drop_table('bot_user_message_counts')
    # Add date column as nullable first
    op.add_column('chat_user_message_counts', sa.Column('date', sa.Date(), nullable=True))
    
    # Update existing records to have today's date
    op.execute("UPDATE chat_user_message_counts SET date = CURRENT_DATE WHERE date IS NULL")
    
    # Make the column not nullable
    op.alter_column('chat_user_message_counts', 'date', nullable=False)
    op.drop_constraint(op.f('uq_chat_user'), 'chat_user_message_counts', type_='unique')
    op.create_index(op.f('ix_chat_user_message_counts_date'), 'chat_user_message_counts', ['date'], unique=False)
    op.create_unique_constraint('uq_chat_user_date', 'chat_user_message_counts', ['chat_id', 'user_id', 'date'])
    op.drop_column('telegram_bots', 'bot_picture_url')
    op.drop_column('telegram_bots', 'description_picture_url')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('telegram_bots', sa.Column('description_picture_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('telegram_bots', sa.Column('bot_picture_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint('uq_chat_user_date', 'chat_user_message_counts', type_='unique')
    op.drop_index(op.f('ix_chat_user_message_counts_date'), table_name='chat_user_message_counts')
    op.create_unique_constraint(op.f('uq_chat_user'), 'chat_user_message_counts', ['chat_id', 'user_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('chat_user_message_counts', 'date')
    op.create_table('bot_user_message_counts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['telegram_bots.id'], name=op.f('bot_user_message_counts_bot_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('bot_user_message_counts_pkey'))
    )
    op.create_index(op.f('ix_bot_user_message_counts_user_id'), 'bot_user_message_counts', ['user_id'], unique=False)
    op.create_index(op.f('ix_bot_user_message_counts_id'), 'bot_user_message_counts', ['id'], unique=False)
    op.create_index(op.f('ix_bot_user_message_counts_bot_id'), 'bot_user_message_counts', ['bot_id'], unique=False)
    op.create_table('analytics_snapshots',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('snapshot_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_chats', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_messages', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unique_users', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('banned_users', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('period_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['telegram_bots.id'], name=op.f('analytics_snapshots_bot_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('analytics_snapshots_pkey'))
    )
    op.create_index(op.f('ix_analytics_snapshots_snapshot_date'), 'analytics_snapshots', ['snapshot_date'], unique=False)
    op.create_index(op.f('ix_analytics_snapshots_period_type'), 'analytics_snapshots', ['period_type'], unique=False)
    op.create_index(op.f('ix_analytics_snapshots_id'), 'analytics_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_analytics_snapshots_bot_id'), 'analytics_snapshots', ['bot_id'], unique=False)
    # ### end Alembic commands ###
